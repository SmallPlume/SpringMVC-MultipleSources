<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
	
	<!-- base dataSource -->
	<bean name="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="minIdle" value="10" />
		<property name="maxWait" value="60000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
	</bean>

	<!-- 主库 -->
	<bean name="master-dataSource" parent="baseDataSource" init-method="init">
		<property name="url" value="${master_driverUrl}" />
		<property name="username" value="${master_username}" />
		<property name="password" value="${master_password}" />
	</bean>

	<!-- 从库 -->
	<bean name="slave-dataSource" parent="baseDataSource" init-method="init">
		<property name="url" value="${slave_driverUrl}" />
		<property name="username" value="${slave_username}" />
		<property name="password" value="${slave_password}" />
	</bean>

	<!--主从库选择 -->
	<bean id="dynamicDataSource" class="commons.DynamicDataSource">
		<property name="master" ref="master-dataSource" />
		<property name="slaves">
			<list>
				<ref bean="slave-dataSource" />
			</list>
		</property>
	</bean>
	
	<!-- mapping配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dynamicDataSource" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- DAO接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="dao" />
	</bean>

</beans>